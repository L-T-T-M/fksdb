<?php

namespace Events\Accommodation;

use Nette\Application\Request;
use Nette\Config\Helpers;
use Nette\DateTime;
use Tester\Assert;

$container = require '../../bootstrap.php';

class AccommodationTest extends AccommodationTestCase {
    protected $lastPersonId;
    protected $dsefAppId;

    public function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->lastPersonId = $this->createPerson('Paní', 'Bílá III.',
            [
                'email' => 'bila3-acc@hrad.cz',
                'born' => DateTime::from('2000-01-01'),
            ]);
        $this->dsefAppId = $this->insert('event_participant', [
            'person_id' => $this->lastPersonId,
            'event_id' => $this->eventId,
            'status' => 'applied',
        ]);
        $this->insert(\DbNames::TAB_E_DSEF_PARTICIPANT,
            [
                'event_participant_id' => $this->dsefAppId,
                'e_dsef_group_id' => 2,
            ]);
        $this->insert('event_person_accommodation', [
            'person_id' => $this->lastPersonId,
            'event_accommodation_id' => $this->accId,
        ]);
        $loginId = $this->insert('login', ['person_id' => $this->lastPersonId]);
        $this->authenticate($loginId);

    }

    public function testRegistration() {
        $postData = [
            'participant' => [
                'person_id' => $this->lastPersonId,

                'e_dsef_group_id' => 2,
                'lunch_count' => 0,
                'message' => "",
            ],
            'privacy' => "on",
            'c_a_p_t_cha' => "pqrt",
            'applied__cancelled' => "Přihlásit účastníka",
        ];

        $post = Helpers::merge([], array(
            'action' => 'default',
            'lang' => 'cs',
            'contestId' => 1,
            'year' => 1,
            'eventId' => $this->eventId,
            'id' => $this->dsefAppId,
            'do' => 'application-form-form-submit',
        ));

        $request = new Request('Public:Application', 'POST', $post, $postData);

        /*$response = $this->fixture->run($request);
        file_put_contents('./acc_out.html', $response->getSource());

        Assert::type('Nette\Application\Responses\RedirectResponse', $response);

*/
        Assert::equal('2', $this->connection->fetchColumn('SELECT count(*) FROM event_person_accommodation WHERE event_accommodation_id = ?', $this->accId));
    }

    public function getAccommodationCapacity() {
        return 3;
    }
}


$testCase = new AccommodationTest($container);
$testCase->run();
