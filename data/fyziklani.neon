# TODO ročníková parametrizac
#  - (kapacita týmů), začátek/konec registrace
# TODO condition macros (reuse of conditions)
# TODO form factories
# TODO person selection is based on email (otherwise name/additional info must be provided)
# TODO specifying table is not necessary for fields at default table
# TODO how to join automatons?
#    - cartesian product + restrictions
#    - explicit allowed states or transitions
#    - should be automaton aware of its context? (then it could be specified as event handler)
# TODO visibility of team/member applications

# default class is scalar (TODO type sounds better than class)

# MACHINE OPERATION
# possible transitions are displayed like buttons with labels with transitino names
# exception is __init->* transition it's a button leading to form?


#
#   TEAM
#
name: TEAM
tables:
    main: e_fyziklani_team
states:
    pending: Čeká na schválení #i18n
    spare: Náhradník
    approved: Potvrzen
    participated: Účastnil se
    cancelled: Zrušen

transitions:
    __init->pending:
        condition: true # TODO add time condition (with registraion period parameters)?
        name: Přihlásit tým
    pending->approved:
        condition: false # TODO logged in && event admin
        name: Potvrdit účast týmu
    pending->spare:
        condition: false # TODO logged in && event admin
        name: Potvrdit jako náhradníka
    approved|spare->participated: # TODO see this syntax for mass transitions, TODO 2: this should enforce moving all members to participated state
        condition: false # TODO logged in && event admin
        name: Potvrdit účast
    *->cancelled: # TODO this means all states except __init
        condition: false # TODO logged in && event admin
        name: Zrušit tým
    cancelled->__terminated:
        condition: false # TODO logged in && event admin
        name: Smazat tým

fields:
    team_name:
        db: e_fyziklani_team.name
        name: Název týmu # i18n
        required: true # or condition
        visible: true # or condition
        modifiable: true # or condition
    category: # TODO processing
        db: e_fyziklani_team.category
        name: Kategorie # i18n
        required: true # or condition, evaluated after processing
        visible: true # or condition
        modifiable: false # or condition        
    main_school:
        db: e_fyziklani_team.main_school_id
        name: Hlavní škola
        required: true
        visible: true
        modifiable: true
        class: ModelSchool
    second_school:
        db: e_fyziklani_team.second_school_id
        name: Druhá škola
        required: false
        visible: true
        modifiable: true
        class: ModelSchool
    contact_person:
        db: e_fyziklani_team.contact_person_id
        name: Kontaktní osoba
        required: true
        visible: true
        modifiable: true
        class: ModelPerson # TODO specify that we require person's phone
    teacher_arrive:
        db: e_fyziklani_team.teacher_arrive 
        name: Přijede učitel
        required: true # TODO?
        visible: true
        modifiable: true
        class: boolean
    note:
        db: e_fyziklani_team.note
        name: Poznámka
        required: false
        visible: true
        modifiable: true

#
#   PARTICIPANT
#
name: PARTICIPANT
tables:
    main: e_participant
    joined: e_fyziklani_participant #TODO necessary?

states:
    applied: Přihlášen
    participated: Účastnil se

transitions:
    __init->applied:
        condition: true
        name: Přihlásit člena
    applied->participated:
        condition: false # TODO logged in && event admin
        name: Potvrdit účast # TODO name is not necessary due to join to team machine
    applied->__terminated:
        condition: true # TODO really can everybody delete members?
        name: Odebrat člena

fields:
    person:
        db: e_participant.person_id
        name: Člen
        required: false # TODO reference to the team and number of memebers, only one member is reqiured
        visible: true
        modifiable: true
        class: ModelPerson
    contestant: # TODO it's assigned by processing
        db: e_participant.ct_id
        required: false # if school and year aren't filled
        visible: false # or condition
        modifiable: false # or condition
    school:
        db: e_participant.main_school_id
        name: Škola
        required: false # if contestant isn't found
        visible: true
        modifiable: true
        class: ModelSchool
    study_year:
        db: e_participant.study_year
        name: Ročník
        required: false # if contestant isn't found
        visible: true
        modifiable: true
        class: ModelSchool # TODO or other constraint

#
#   JOINT WORKFLOW
#   explanation: workflow consists of several instances of machines
#
workflow:    
    team: TEAM 
    p1: PARTICIPANT
    p2: PARTICIPANT
    p3: PARTICIPANT
    p4: PARTICIPANT
    p5: PARTICIPANT
