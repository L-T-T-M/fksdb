# Conditions based callbacks + logic conjuctions on those.

# TODO visibility of team/member applications (-> probably in WF definition)
# TODO change in schema to time sections of person information (school, study_year)

# MACHINE OPERATION
# possible transitions are displayed like buttons with labels with transition names
# exception is __init->* transition it's a button leading to form?
# (* match all states with exception of __init and __terminated)
# between two states may exist at most one transition
#
# Connection of machine with data
#   - validation after form send
#   - processing after validation ? processing before validation

# Solved
# ------
# ročníková parametrizace
#  - (kapacita týmů (# týmů)), začátek/konec registrace
#  - no. of team members requires brand new workflow -> factory for workflow/workflow names
#  -> part of the machine/workflow context
# condition macros (reuse of conditions)
#  -> string interpolation
# form factories
#  -> for each field create form element by DB reflection (at compile time, tinyyint(1) is boolean (checkbox))
#     or use provided factory callback (argumemt should be the data model + WF context + field metadata (but conditions must be already evaluated))
# person selection is based on email (otherwise name/additional info must be provided)
#  -> use the factory mentioned above
parameters:
    events:
        fyziklani:
            liaison:
                person:
                    other_name: true
                    family_name: true
                person_info:
                    email: true
#                post_contact:
#                    type: P
#                    address: true
            participant:
                person:
                    other_name: true
                    family_name: true
                person_info:
                    email: true
                    id_number: false
                person_history:
                    school_id: true
                    study_year: true
            dep:
                require:
                    p*.person_id.person_info.id_number: p*.note
                visible:
                    team.name: team.teacher_will_stay

events:
    fyziklani:
        event_type_id: 1
        #eventYears: [1,2,3,4] # specify for which years this machine is valid, by default all years
        tableLayout: fyziklani
        paramScheme:
            cc_mail:

        baseMachines:
            #
            #   TEAM
            #    
            TEAM:
                service: @event.ServiceFyziklaniTeam
                personIds: [liaison_id]
                eventId: e_fyziklani_team.event_id
                
                states:
                    pending: Čeká na schválení #i18n
                    spare: Náhradník
                    approved: Potvrzen
                    participated: Účastnil se
                    cancelled: Zrušen

                transitions:
                    __init->pending:
                        condition: true # TODO add time condition (with registraion period parameters)?
                        label: Přihlásit tým
                        # onExecuted: [callback] # TODO send email
                    pending->approved:
                        condition: true # TODO logged in && event admin
                        label: Potvrdit účast týmu
                    pending->spare:
                        condition: true # TODO logged in && event admin
                        label: Potvrdit jako náhradníka
                    approved|spare->participated:
                        condition: false # TODO logged in && event admin
                        label: Potvrdit účast
                    *->cancelled: # TODO this means all states except __init
                        condition: false # TODO logged in && event admin
                        label: Zrušit tým
                    cancelled->__terminated:
                        condition: false # TODO logged in && event admin
                        label: Smazat tým

                fields:
                    name:
                        label: Název týmu # i18n
                        required: true # or condition
                        visible: true # or condition
                        modifiable: true # or condition
                    category:
                        label: Kategorie # i18n
                        required: true # or condition, evaluated after processing (if not modifiable, otherwise in GUI (too))
                        visible: true # or condition
                        modifiable: false # it means modifiable in GUI, or condition        
                    teacher_present:
                        label: Přijede učitel
                        visible: true
                        modifiable: true
                    teacher_will_stay:
                        label: Učitel má zájem o program
                        visible: true
                        modifiable: true
                    liaison_id:
                        label: Kontaktní osoba
                        required: true
                        visible: true
                        modifiable: true
                        factory: RefPerson(%events.fyziklani.liaison%, email, true, Persons\SelfResolver(), Persons\SelfResolver(), ...)
                    # TODO note

            #
            #   PARTICIPANT
            #    
            PARTICIPANT:
                service: @event.ServiceMFyziklaniParticipant
                joinOn: team_id
                personIds: [e_fyziklani_participant:event_participant.person_id]

                states:
                    applied: Přihlášen
                    participated: Účastnil se

                transitions:
                    __init->applied:
                        condition: true
                        label: Přihlásit člena
                    applied->participated:
                        condition: false # TODO logged in && event admin
                        label: Potvrdit účast # name is not necessary due to join to team machine
                    applied->__terminated:
                        condition: true # TODO really can everybody delete members?
                        label: Odebrat člena

                fields:
                    person_id:
                        label: Osoba
                        visible: true
                        modifiable: true
                        determining: true
                        factory: RefPerson(%events.fyziklani.participant%, email, true, Persons\SelfResolver(), Persons\SelfResolver(), ...)
                        # TODO person factory
                    note:
                        label: Poznámka
                        visible: true
                        modifiable: true
                        required: false
                        description: jhahah


        #
        #   MACHINE
        #   explanation: machine consists of several instances of base machines
        #
        machine:
            baseMachines:
                team:
                    bmName: TEAM 
                    label: Tým
                    required: true # default false, it's conjuction with fields requirement
                    primary: true # base machine states are propagated to the machine
                p1:
                    bmName: PARTICIPANT
                    label: 1. člen
                    required: true
                p2:
                    bmName: PARTICIPANT
                    label: 2. člen
                p3:
                    bmName: PARTICIPANT
                    label: 3. člen
                p4:
                    bmName: PARTICIPANT
                    label: 4. člen
                p5:
                    bmName: PARTICIPANT
                    label: 5. člen
            formAdjustments:
                - Events\Model\FormAdjustments\DependentRequirements(%events.fyziklani.dep.require%)
                - Events\Model\FormAdjustments\DependentVisibility(%events.fyziklani.dep.visible%)
            processings:
                - Events\Model\Fyziklani\CategoryProcessing() # TODO calculate category & check <= 2 schools

            joins:
                # NOTE: Join may not be realized if induced transition isn't viable.
                # NOTE: Cycle detection can be done statically (e.g. team moves participant and participant moves team in the reaction to this)
                # This means that team that is marked as participated/deleted propagates this change to all its members.
                team:
                    *->participated:
                        p1: participated
                        p2: participated
                        p3: participated
                        p4: participated
                        p5: participated
                    *->__terminated:
                        p1: __terminated
                        p2: __terminated
                        p3: __terminated
                        p4: __terminated
                        p5: __terminated
